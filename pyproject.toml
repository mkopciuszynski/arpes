[project]
name = "arpes"
version = "4.0.0"
description = "PyARPES: An analysis framework for multimodal angle-resolved photoemission spectroscopies"
authors = [
  { name = "Conrad Stansbury", email = "chstan@berkeley.edu" },
  { name = "Ryuichi Arafune", email = "ryuichi.arafune@gmail.com" },
]
readme = "README.rst"
requires-python = ">= 3.11"

dependencies = [
  "holoviews>=1.16.0",
  "astropy>=6.1",
  "xarray>=2023.9.0",
  "lmfit>=1.3.1",
  "matplotlib>=3.8.0",
  "pint>=0.22",
  "h5py>=3.11.0",
  "ase>=3.23.0",
  "dill>=0.3.6",
  "tqdm>=4.65.0",
  "numba>=0.57.1",
  "scikit-learn>=1.4.2",
  "scikit-image>=0.20.0",
  "rx>=3.2.0",
  "jupyter_server>=2.8",
  "hvplot>=0.10",
  "ipywidgets",
  "ipykernel",
  "more-itertools>=10.2.0",
  "igorpy @ git+https://github.com/arafune/igorpy.git",
  "titlecase>=2.4.1",
  "h5netcdf>=1.3.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.uv]
managed = true
dev-dependencies = [
  "colorama>=0.4.6",
  "ruff>=0.8.0",
  "pytest>=7.3.2",
  "pytest-cov",
  "pytest-clarity",
  "types-tqdm>=4.65.0.1",
  "pluggy",
  "sphinx",
  "sphinxcontrib-restbuilder",
  "sphinx_rtd_theme",
  "nbsphinx",
  "sphinx_copybutton",
  "sphinxnotes-strike",
  "pydata-sphinx-theme",
  "neovim",
  "mypy",
  "nbstripout",
  "cmap",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/arpes"]

[tool.coverge.run]
omit = [
  "src/arpes/plotting/*",
  "tests/*",
  "src/arpes/deep_learning/*",
  "src/arpes/widgets.py",
]

[tool.coverge.report]
exclude_lines = ["raise NotImplementedError", "pragma: no cover"]

[tool.pyright]
exclude = [
  "**/ALG_spin_TOF.py",
  "**/fits_utils.py",
  "**/Elettra_spectromicroscopy.py",
  "**ALG_main.py",
  "ANTARES.py",
  "**/MAESTRO.py",
  "**/BL10_SARPES.py",
  "**/SSRF_NSRL.py",
  "**/MGS.py",
  "**/kaindl.py",
  "**/merlin.py",
]

typeCheckingMode = "standard" # "off", "basic" "standard" "strict"
include = ["src"]

pythonVersion = "3.11"
pythonPlatform = "All"

reportMissingTypeStubs = false
reportUnreachable = false

[tool.ruff]
target-version = "py311"
line-length = 100
indent-width = 4

exclude = ["scripts", "docs", "conda"]

[tool.ruff.lint]
ignore = [
  "PD",     # pandas-vet
  "PD011",  # pandas-use-of-dot-values
  "N802",   # invalid-function-name (N802)
  "N806",   # non-lowercase-variable-in-function
  "N999",   # invalid-module-name (N999)
  "S101",   # assert (S101)
  "TD002",  # missing-todo-author
  "A005",   # stdlib-module-shadowing
  "TD003",  # missing-todo-link
  "FIX002", # line-contains-todo
  "G004",   # logging-f-string
  #
  "CPY001", # missing-copyright-notice (CPY001)
]

select = ["ALL"]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]                                              # unused-import
"src/arpes/workflow.py" = ["T201", "T203"]
"src/arpes/fits/lmfit_html_repr.py" = ["SLF001"]                      # private member accecced
"Elettra_spectromicroscopy.py" = ["ALL"]
"ALG_spin_ToF.py" = ["ALL"]
"ANTARES.py" = ["ALL"]
"MAESTRO.py" = ["ALL"]
"kaindl.py" = ["ALL"]
"merlin.py" = ["ALL"]
"nexus_utils.py" = ["ALL"]
"fits_utils.py" = ["ALL"]
"tests/*" = ["PLR2004", "ERA001", "SLF001", "ANN201", "D102", "D103"]
"resources/*" = ["INP001"]
"src/arpes/endstations/igor_utils.py" = ["S605"]
"legacy_files/*" = ["ALL"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

[tool.mypy]
ignore_missing_imports = true

exclude = [
  "ALG_spin_ToF\\.py",
  "fits_utils\\.py",
  "Elettra_spectromicroscopy\\.py",
  "ALG_main\\.py",
  "ANTARES\\.py",
  "MAESTRO\\.py",
  "HERS\\.py",
  "BL10_SARPES\\.py",
  "SSRF_NSRL\\.py",
  "MBS\\.py",
  "kaindl\\.py",
  "merlin\\.py",
  # might be included in the future, though
  "widgets\\.py",
  "^src/arpes/deep_learning/.*\\.py$",
]


[tool.black]
line-length = 100

[tool.commitizen]
name = "cz_emoji"
version = "0.0.1"
tag_format = "$version"


[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = "src"
addopts = "--cov=arpes --cov-report html"
norecursedirs = [
  ".git",
  "__pycache__",
  "tmp",
  "exp",
  "resources",
  "scripts",
  "build",
  "dist",
  "conda-dist",
  "legacy_files",
  "docs",
]

[tool.coverage.run]
source = ['arpes']
omit = ["tests/*", "src/arpes/deep_learning/*"]

[tool.coverage.report]
exclude_also = [
  "def __repr__",
  "def _repr_html_.*",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "^if TYPE_CHECKING:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
